let dataTableInstance;function fetchProducts(){fetch("/products").then(t=>t.json()).then(t=>{let n=document.getElementById("productsTableBody");n.innerHTML="",dataTableInstance&&dataTableInstance.clear(),t.data.forEach(t=>{var e=[t._id,t.description,t.category,t.price,t.quantity,t.retailer,`<a href="/products/${t._id}/edit" class="btn btn-primary">Edit</a>
                     <button class="btn btn-danger" onclick="deleteProduct('${t._id}')">Delete</button>`];dataTableInstance?dataTableInstance.row.add(e):((e=document.createElement("tr")).innerHTML=`
                        <td>${t._id}</td>
                        <td>${t.description}</td>
                        <td>${t.category}</td>
                        <td>${t.price}</td>
                        <td>${t.quantity}</td>
                        <td>${t.retailer}</td>
                        <td>
                            <a href="/products/${t._id}/edit" class="btn btn-primary">Edit</a>
                            <button class="btn btn-danger" onclick="deleteProduct('${t._id}')">Delete</button>
                        </td>
                    `,n.appendChild(e))}),dataTableInstance?dataTableInstance.draw():dataTableInstance=new DataTable("#productsTable",{paging:!0,searching:!0,ordering:!0,info:!0,pageLength:8})}).catch(t=>console.error("Error loading products:",t))}async function deleteProduct(t){if(confirm("Are you sure you want to delete this product?"))try{(await fetch(`/products/${t}/delete`,{method:"DELETE"})).ok?(alert("Product deleted successfully"),fetchProducts()):alert("Error deleting product")}catch(t){console.error("Error:",t),alert("Error deleting product")}}function fetchOrders(){fetch("/admin/orders").then(t=>t.json()).then(t=>{let i=document.getElementById("ordersTableBody");i.innerHTML="",Array.isArray(t)?t.forEach(t=>{var e=t.userId?`${t.userId.address.street}, ${t.userId.address.city}, `+t.userId.address.country:"N/A",n=t.userId&&t.userId.authId?t.userId.authId.fullName:"N/A",o=t.totalAmount,a=t.status,d=new Date(t.orderedAt).toLocaleDateString(),r=t.shippedAt?new Date(t.shippedAt).toLocaleDateString():"N/A",s=t.deliveredAt?new Date(t.deliveredAt).toLocaleDateString():"N/A";let c="";t.orderItems.forEach(t=>{var e=t.productId?t.productId.name:"Unknown Product",n=t.price,t=t.quantity;c+=`<p>${e} (x${t}) - $${n}</p>`});t=document.createElement("tr");t.innerHTML=`
                        <td>${n}</td>
                        <td>${e}</td>
                        <td>${c}</td>
                        <td>$${o}</td>
                        <td>${a}</td>
                        <td>${d}</td>
                        <td>${r}</td>
                        <td>${s}</td>
                    `,i.appendChild(t)}):console.error("Expected an array of orders, but got:",t)}).catch(t=>console.error("Error loading orders:",t))}function adminNav(t,e){for(var n,o=document.getElementsByClassName("tabcontent"),a=0;a<o.length;a++)o[a].style.display="none";for(n=document.getElementsByClassName("tablinks"),tablist=document.getElementsByClassName("sidenav-items")[0].getElementsByTagName("li"),a=0;a<n.length;a++)n[a].classList.remove("active");for(a=0;a<tablist.length;a++)tablist[a].classList.remove("active");document.getElementById(e).style.display="block",t.currentTarget.classList.add("active"),t.currentTarget.closest("li").classList.add("active")}window.addEventListener("DOMContentLoaded",function(){let t=document.getElementById("authentication");var e=document.getElementById("register"),n=document.getElementById("login"),o=document.getElementById("logout"),a=document.getElementById("manageProduct"),d=document.getElementById("viewOrder"),r=document.getElementById("forgotPassword"),s=document.getElementById("back-to-sign-in"),c=document.getElementById("footer"),i=document.getElementById("toast__success"),l=document.getElementById("toast_error"),i=(window.addEventListener("load",()=>{setTimeout(()=>{document.querySelector(".loader-content").style.display="none"},2e3)}),null===i&&null===l||(i?M.toast({html:i.getAttribute("data-message"),classes:"toast toast__success",displayLength:4e3}):M.toast({html:l.getAttribute("data-message"),classes:"toast toast__error",displayLength:4e3})),window.location.pathname);"/"!==i&&"/dashboard"!==i||(c.style.display="none"),"/dashboard"===i&&(a.addEventListener("click",fetchProducts),d.addEventListener("click",fetchOrders)),e?.addEventListener("click",()=>{t.classList.add("active")}),n?.addEventListener("click",()=>{t.classList.remove("active")}),o?.addEventListener("click",()=>{fetch("/logout",{method:"POST",credentials:"include"}).then(t=>{t.ok&&(window.location.href="/")}).catch(t=>{console.error("Error logging out:",t)})}),r?.addEventListener("click",t=>{t.preventDefault(),document.getElementById("sign-in-form").style.display="none",document.getElementById("forgot-password-container").style.display="block"}),s?.addEventListener("click",t=>{t.preventDefault(),document.getElementById("sign-in-form").style.display="block",document.getElementById("forgot-password-container").style.display="none"})});let notifications=[];function updateNotifications(t){console.log("Updating notifications with:",t),notifications.unshift(t);var e=document.querySelector(".notification-count"),e=(e&&(e.textContent=notifications.length),document.getElementById("notifications-dropdown"));e&&(e.innerHTML=notifications.map(t=>`
                    <li>
                        <a href="#!" class="notification-item">
                            <span class="notification-message">${t.message}</span>
                            <span class="notification-time">${new Date(t.timestamp).toLocaleTimeString()}</span>
                        </a>
                    </li>
                `).join("")),M&&M.toast&&M.toast({html:t.message})}let socket=io();socket.on("connect",()=>{console.log("Connected to socket server")}),socket.on("connect_error",t=>{console.error("Socket connection error:",t)}),socket.on("notification",t=>{console.log("Received notification:",t),updateNotifications(t)});